name:                applicative-lens

-- The package version.  See the Haskell package versioning policy (PVP) 
-- for standards guiding when and how versions should be incremented.
-- http://www.haskell.org/haskellwiki/Package_versioning_policy
-- PVP summary:      +-+------- breaking API changes
--                   | | +----- non-breaking API additions
--                   | | | +--- code changes with no API change
version:             0.1.0.0

-- A short (one-line) description of the package.
-- synopsis:            

-- A longer description of the package.
-- description:         

license:             BSD3
license-file:        LICENSE

author:              Kazutaka Matsuda
maintainer:          kztk@ecei.tohoku.ac.jp
category:            Data
build-type:          Simple
cabal-version:       >=1.10

Flag UseVanLaarhoven
  Description: Use lens package as an internal implementation of lens
  Default:     False 


-- Executable bench
--   Main-is: Examples/Bench.hs
--   Build-Depends: base >=4.7, containers >=0.5, mtl >=2.2, deepseq >= 1.3, criterion >= 1.1

--   if flag(useVanLaarhoven)
--      build-depends: lens >= 4.11 
--      cpp-options: -D__USE_VAN_LAARHOVEN__

--   GHC-Options: -O2 -rtsopts 
  
--   default-language:    Haskell2010




Library
  exposed-modules: Data.ApplicativeLens, Data.ApplicativeLens.Exception
  
  other-modules: Data.ApplicativeLens.Core, Data.ApplicativeLens.Util 
  
  if flag(useVanLaarhoven)
    build-depends: lens >= 4.11 
    other-modules: Data.ApplicativeLens.LLens
    cpp-options: -D__USE_VAN_LAARHOVEN__
  else
    other-modules: Data.ApplicativeLens.Lens

  other-extensions:    RankNTypes, LambdaCase, NoMonomorphismRestriction, FlexibleInstances, FlexibleContexts, UndecidableInstances, IncoherentInstances, CPP, ExistentialQuantification, DeriveDataTypeable, DeriveFunctor, DeriveFoldable, DeriveTraversable
  
  build-depends:       base >=4.7, containers >=0.5, mtl >=2.2
  
  GHC-Options: -O2 -rtsopts 

  default-language:    Haskell2010

  
  